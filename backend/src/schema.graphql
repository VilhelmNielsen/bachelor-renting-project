# import * from './generated/prisma.graphql'

scalar DateTime

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
    last: Int
  ): [Item!]!
  itemsConnection(where: ItemWhereInput): ItemConnection!
  item(where: ItemWhereUniqueInput!): Item

  categories(
    where: CategoryWhereInput
    orderBy: CategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Category!]!
  categoriesConnection(where: CategoryWhereInput): CategoryConnection!
  category(where: CategoryWhereUniqueInput!): Category

  searchItems(searchTerm: String): [SearchResult!]

  me: User
}

type Mutation {
  createItem(
    title: String!
    description: String!
    price: Int!
    category: ID!
    maxDuration: Int
    imageFull: String
    imagePreview: String
  ): Item!
  updateItem(
    id: ID!
    title: String
    description: String
    price: Int
    maxDuration: Int
  ): Item!

  signUp(
    name: String!
    email: String!
    password: String!
    imageFull: String
    imagePreview: String
  ): User!
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage
  updateProfile(name: String, email: String, password: String): User!

  book(itemId: ID!, startDate: DateTime!, endDate: DateTime!): Booking!
  cancelBooking(id: ID!): Booking!
  acceptBooking(id: ID!): Booking!
  denyBooking(id: ID!): Booking!

  reviewItem(id: ID!, stars: Int!, description: String): ItemReview!
  reviewUser(id: ID!, stars: Int!, description: String): UserReview!

  createCategory(title: String!, description: String!): Category!
}

type SuccessMessage {
  message: String
}

type SearchResult {
  count: Int
  category: Category
}

type User {
  id: ID!
  name: String!
  image: Image
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Item!]
  email: String!
  bookings(
    where: BookingWhereInput
    orderBy: BookingOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Booking!]
  pendingBookings: [Booking!]!
}

type Item {
  id: ID!
  title: String!
  description: String!
  owner: User!
  image: Image
  bookings(
    where: BookingWhereInput
    orderBy: BookingOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Booking!]
  reviews(
    where: ItemReviewWhereInput
    orderBy: ItemReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [ItemReview!]
  price: Int!
  maxDuration: Int
  category: Category!
  averageRating: Float
}
