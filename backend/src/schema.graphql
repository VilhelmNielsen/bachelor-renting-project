# import * from './generated/prisma.graphql'

scalar DateTime

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
    last: Int
  ): [Item!]!
  itemsConnection(where: ItemWhereInput): ItemConnection!
  item(where: ItemWhereUniqueInput!): Item

  categories(
    where: CategoryWhereInput
    orderBy: CategoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Category!]!
  categoriesConnection(where: CategoryWhereInput): CategoryConnection!

  me: User
}

type Mutation {
  createItem(
    title: String!
    description: String!
    price: Int!
    category: ID!
    maxDuration: Int
  ): Item!
  updateItem(
    id: ID!
    title: String
    description: String
    price: Int
    maxDuration: Int
  ): Item!

  signUp(name: String!, email: String!, password: String!): User!
  signIn(email: String!, password: String!): User!
  signOut: SuccessMessage

  book(itemId: ID!, startDate: DateTime!, endDate: DateTime!): Booking!
  cancel(id: ID!): Booking!

  reviewBooking(id: ID!, rating: Int!): BookingReview!
}

type SuccessMessage {
  message: String
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  name: String!
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Item!]
  email: String!
  bookings(
    where: BookingWhereInput
    orderBy: BookingOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Booking!]
  #reviewsBy: [UserReview!]
  #reviews: [UserReview!]
}
