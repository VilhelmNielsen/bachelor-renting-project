type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  items: [Item!]!
  bookings: [Booking!]!
  location: Location
}

type Location {
  city: String!
  country: String!
  lat: Float!
  lng: Float!
}

type Item {
  id: ID! @unique
  title: String!
  description: String!
  owner: User!
  bookings: [Booking!]!
  price: Int!
  maxDuration: Int
  category: Category!
}

type Booking {
  id: ID! @unique
  item: Item
  booker: User
  startDate: DateTime!
  endDate: DateTime!
  review: BookingReview
  status: BookingStatus! @default(value: "PENDING")
}

type UserReview {
  id: ID! @unique
  rating: Int!
  user: User! @relation(name: "UserReviewByUser")
  reviewer: User! @relation(name: "UserReviewOfUser")
}

type BookingReview {
  id: ID! @unique
  rating: Int!
  booking: Booking!
  reviewer: User
}

type Category {
  name: String! @unique
  slug: String! @unique
  description: String!
  items: [Item!]!
}

enum Permission {
  ADMIN
  USER
}

enum BookingStatus {
  PENDING
  APPROVED
  DENIED
  CANCELLED
}
